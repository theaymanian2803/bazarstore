<mxfile host="app.diagrams.net" modified="2024-02-20T15:19:02.114Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0" etag="_vlmEgJ-oW3F6cmdUNHy" version="23.1.5" type="github">
  <diagram id="prtHgNgQTEPvFCAcTncT" name="Page-1">
    <mxGraphModel dx="2534" dy="1176" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Xon92TvHDKMdxUnF4vsS-2" value="&lt;i&gt;&lt;font style=&quot;font-size: 72px;&quot;&gt;JavaScript is a programming language commonly used for creating interactive and dynamic content on webpages&lt;/font&gt;&lt;/i&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="-220" y="350" width="1220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-4" value="&lt;font style=&quot;font-size: 48px;&quot; color=&quot;#33001a&quot;&gt;javascript&lt;/font&gt;" style="shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;" parent="1" vertex="1">
          <mxGeometry x="160" y="80" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-5" value="&lt;font style=&quot;font-size: 48px;&quot;&gt;جافا سكريبت هو لغة برمجة تُستخدم بشكل شائع لإنشاء محتوى تفاعلي وديناميكي على صفحات الويب. إنها لغة برمجة مستوى عالٍ&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-50" y="560" width="850" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-6" value="&lt;font style=&quot;font-size: 48px;&quot;&gt;interpreted language that is integrated into web browsers. JavaScript &lt;br&gt;allows developers to manipulate webpage elements, respond to user &lt;br&gt;actions, validate input, and create animations, among other things.&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-190" y="780" width="1230" height="70" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-7" value="&lt;font style=&quot;font-size: 48px;&quot;&gt;تُفسر مباشرة ومُدمجة داخل متصفحات الويب. يتيح جافا سكريبت للمطورين &lt;br&gt;تلاعب عناصر صفحة الويب، والاستجابة لإجراءات المستخدم، والتحقق من &lt;br&gt;الإدخال، وإنشاء الرسوم المتحركة، وغير ذلك الكثير.&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-150" y="1220" width="1160" height="70" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-17" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="Xon92TvHDKMdxUnF4vsS-8" target="Xon92TvHDKMdxUnF4vsS-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-8" value="&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;font style=&quot;font-size: 36px;&quot;&gt;&lt;strong&gt;Client-Side Web Development&lt;/strong&gt;: JavaScript is primarily used to enhance the interactivity and functionality of websites and web applications on the client-side (i.e., in the user&#39;s web browser). It can manipulate HTML and CSS to dynamically update content, respond to user interactions, validate form data, and create rich user interfaces.&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-240" y="1430" width="560" height="740" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-9" value="&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;Web Application Development&lt;/strong&gt;:&#xa; JavaScript is essential for building web applications, including &#xa;single-page applications (SPAs), which provide a more fluid user &#xa;experience by dynamically updating content without requiring full page &#xa;reloads. Popular JavaScript frameworks and libraries like React, &#xa;Angular, and Vue.js are commonly used for building complex web &#xa;applications.&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="450" y="1490" width="560" height="480" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-10" value="&lt;li&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;Server-Side Development&lt;/strong&gt;: &lt;br&gt;JavaScript is also used for server-side development through platforms &lt;br&gt;like Node.js. With Node.js, developers can use JavaScript to build &lt;br&gt;scalable and efficient server-side applications, APIs (Application &lt;br&gt;Programming Interfaces), and real-time web applications.&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="480" y="1900" width="530" height="140" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-11" value="&lt;li&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;Game Development&lt;/strong&gt;: JavaScript can &lt;br&gt;be utilized for creating browser-based games, interactive simulations, &lt;br&gt;and other multimedia experiences on the web. Libraries like Phaser.js &lt;br&gt;and Three.js provide tools and frameworks specifically tailored for game&lt;br&gt; development in JavaScript.&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="490" y="2260" width="560" height="140" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-12" value="&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;Mobile App Development&lt;/strong&gt;: JavaScript &lt;br&gt;frameworks such as React Native and Ionic allow developers to build &lt;br&gt;mobile applications for iOS and Android platforms using familiar web &lt;br&gt;technologies like HTML, CSS, and JavaScript.&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="460" y="2590" width="520" height="100" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-13" value="&lt;li&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;Desktop Application Development&lt;/strong&gt;: &lt;br&gt;With frameworks like Electron, developers can use JavaScript to build &lt;br&gt;cross-platform desktop applications. Electron combines Node.js and &lt;br&gt;Chromium to create desktop applications using web technologies.&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-250" y="2350" width="530" height="120" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-14" value="&lt;ol&gt;&lt;li value=&quot;4&quot;&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;Data Visualization&lt;/strong&gt;:&lt;br&gt; JavaScript libraries like D3.js enable developers to create interactive&lt;br&gt; and dynamic data visualizations on webpages, making it easier to &lt;br&gt;present complex data in a comprehensible format.&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-270" y="2020" width="560" height="230" as="geometry" />
        </mxCell>
        <mxCell id="Xon92TvHDKMdxUnF4vsS-15" value="&lt;font style=&quot;font-size: 48px;&quot;&gt;Overall,&lt;br&gt; JavaScript is a versatile and powerful language that plays a crucial &lt;br&gt;role in modern web development, enabling developers to create dynamic &lt;br&gt;and interactive experiences across various platforms and devices.&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-220" y="2810" width="1250" height="490" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-1" value="&lt;font style=&quot;font-size: 48px;&quot;&gt;section1 console&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="95" y="3290" width="570" height="60" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-2" value="&lt;font style=&quot;font-size: 48px;&quot;&gt;section 2 variables and constants&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="95" y="4060" width="570" height="140" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-3" value="&lt;font style=&quot;font-size: 48px;&quot;&gt;dataTypes&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="105" y="5450" width="570" height="90" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-4" value="&lt;font style=&quot;font-size: 48px;&quot;&gt;primitive vs reference types&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="140" y="6280" width="570" height="150" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-5" value="&lt;font style=&quot;font-size: 48px;&quot;&gt;type conversion&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="175" y="6820" width="570" height="150" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-6" value="&lt;font style=&quot;font-size: 72px;&quot;&gt;operators&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="140" y="7030" width="570" height="150" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-7" value="&lt;p&gt;&lt;font style=&quot;font-size: 36px;&quot;&gt;In JavaScript, the &lt;code&gt;console&lt;/code&gt; object is a built-in object that provides access to the browser&#39;s&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font style=&quot;font-size: 36px;&quot;&gt;&amp;nbsp;debugging console&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font style=&quot;font-size: 36px;&quot;&gt;or in the case of server-side JavaScript (like Node.js),&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&amp;nbsp;the terminal/console where the script is running. It offers various&amp;nbsp;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;methods to interact with the console&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;, allowing developers to output messages, debug their code, and monitor the execution flow.&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;Here are some common methods provided by the &lt;code&gt;console&lt;/code&gt; object:&lt;/font&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-320" y="3455" width="1450" height="370" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-8" value="&lt;ol&gt;&lt;li&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;code&gt;console.log()&lt;/code&gt;: Outputs a message to the console.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;code&gt;console.error()&lt;/code&gt;: Outputs an error message to the console.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;code&gt;console.warn()&lt;/code&gt;: Outputs a warning message to the console.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;code&gt;console.info()&lt;/code&gt;: Outputs an informational message to the console.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;code&gt;console.debug()&lt;/code&gt;: Outputs a debug message to the console.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;code&gt;console.clear()&lt;/code&gt;: Clears the console.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;code&gt;console.table()&lt;/code&gt;: Displays tabular data as a table.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;code&gt;console.group()&lt;/code&gt; and &lt;code&gt;console.groupEnd()&lt;/code&gt;: Groups messages together in a collapsible list.&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="40" y="3810" width="840" height="220" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-9" value="&lt;font style=&quot;font-size: 36px;&quot;&gt;&lt;code&gt;var&lt;/code&gt;: Historically, &lt;code&gt;var&lt;/code&gt; was the original way to declare variables in JavaScript.&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-207.5" y="4230" width="1225" height="40" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-10" value="&lt;pre&gt;&lt;b&gt;&lt;code class=&quot;!whitespace-pre hljs language-javascript&quot;&gt;&lt;font style=&quot;font-size: 36px;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;;&lt;/font&gt;&lt;/code&gt;&lt;/b&gt;&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="270" y="4280" width="110" height="60" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-11" value="&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;code&gt;let&lt;/code&gt;: Introduced in ECMAScript 2015 (ES6), &lt;code&gt;let&lt;/code&gt; allows you to declare variables that are block-scoped,&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-166" y="4370" width="1160" height="50" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-13" value="&lt;pre&gt;&lt;font style=&quot;font-size: 36px;&quot;&gt;&lt;code class=&quot;!whitespace-pre hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; y = &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;;&lt;/code&gt;&lt;/font&gt;&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="270" y="4420" width="110" height="60" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-14" value="&lt;font style=&quot;font-size: 36px;&quot;&gt;&lt;code&gt;const&lt;/code&gt;: Also introduced in ECMAScript 2015 (ES6), &lt;code&gt;const&lt;/code&gt;&lt;br&gt; allows you to declare variables with constant values, meaning their &lt;br&gt;value cannot be re-assigned or re-declared. However, note that for &lt;br&gt;objects and arrays declared with &lt;code&gt;const&lt;/code&gt;, their properties or elements can still be mutated.&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-190" y="4510" width="1647.5" height="290" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-15" value="&lt;pre&gt;&lt;font style=&quot;font-size: 36px;&quot;&gt;&lt;code class=&quot;!whitespace-pre hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; z = &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;;&lt;/code&gt;&lt;/font&gt;&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="250" y="4720" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-16" value="&lt;pre&gt;&lt;font style=&quot;font-size: 36px;&quot;&gt;&lt;code class=&quot;!whitespace-pre hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Declaring variables using var&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Declaring variables using let&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; c = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; d = &lt;span class=&quot;hljs-number&quot;&gt;10.5&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Declaring variables using const&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; e = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; f = { &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;John&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt; };&lt;/code&gt;&lt;/font&gt;&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="95" y="4870" width="290" height="210" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-17" value="&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;In programming, primitive data types are the most basic data types provided by a programming language. They are used to represent simple values, and they are not objects. In JavaScript, there are six primitive data types:&lt;/font&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;Number&lt;/strong&gt;: Represents numeric values, including integers and floating-point numbers.&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;b&gt;&lt;font color=&quot;#ff0d0d&quot; style=&quot;font-size: 24px;&quot;&gt;&amp;nbsp;Example: &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;3.14&lt;/code&gt;.&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;String&lt;/strong&gt;: Represents textual data, enclosed in single quotes (&lt;code&gt;&#39;&lt;/code&gt;) or double quotes (&lt;code&gt;&quot;&lt;/code&gt;).&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&amp;nbsp;&lt;b&gt;&lt;font color=&quot;#ff0505&quot;&gt;Example: &lt;code&gt;&#39;Hello&#39;&lt;/code&gt;, &lt;code&gt;&quot;JavaScript&quot;&lt;/code&gt;.&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: Represents a logical value indicating true or false.&amp;nbsp;&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;font color=&quot;#ff0303&quot; style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Example: &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;.&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;Undefined&lt;/strong&gt;: Represents a variable that has been declared but not assigned a value. When a variable is declared but not initialized, its value is &lt;code&gt;undefined&lt;/code&gt;.&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;Null&lt;/strong&gt;: Represents an intentional absence of any value or an empty value. It is distinct from &lt;code&gt;undefined&lt;/code&gt;. When a variable is explicitly assigned the value &lt;code&gt;null&lt;/code&gt;, it means that the variable has no value.&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;strong&gt;Symbol&lt;/strong&gt;: Represents a unique and immutable value used as an identifier for object properties. Symbols are new in ECMAScript 2015 (ES6).&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-100" y="5580" width="1067.5" height="730" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-18" value="&lt;font style=&quot;font-size: 36px;&quot;&gt;&lt;strong&gt;Object&lt;/strong&gt;: Objects are collections of key-value pairs where keys are strings (or symbols) and values can be of any data type&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="30" y="6500" width="970" height="50" as="geometry" />
        </mxCell>
        <mxCell id="BC2VhV99_XQRJiZHXAV2-19" value="let person = { name: &quot;John&quot;, age: 30 };" style="text;whiteSpace=wrap;fontColor=#FF0A0A;" vertex="1" parent="1">
          <mxGeometry x="210" y="6650" width="510" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
